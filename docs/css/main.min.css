/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}
* {
  box-sizing: border-box;
}

body, html {
  background-color: white;
  font-family: Museomoderno, sans-serif;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.42em;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@media screen and (max-width: 480px) {
  body, html {
    font-size: 3.33vmin;
  }
}

.container {
  max-width: 950px;
  width: 100%;
  margin: 0 auto;
}

.wrapper {
  overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  font-weight: normal;
}

ul {
  list-style: none;
  display: flex;
}

a {
  text-decoration: none;
  color: inherit;
}

input {
  border: none;
  outline: none;
}

.logo__text, .logo {
  display: flex;
  gap: min(2vmin, 20px);
}
.logo__text__pic, .logo__pic {
  fill: white;
  width: 3.2142857143rem;
  height: 3.2142857143rem;
}
.logo__text__text, .logo__text {
  flex-direction: column;
  font-family: Nunito;
  gap: 5px;
}
.logo__text__title, .logo__title {
  font-size: 2.1428571429rem;
  font-weight: 500;
}
.logo__text__subtitle, .logo__subtitle {
  letter-spacing: -0.0714285714rem;
}

.CTA {
  border: none;
  color: white;
  cursor: pointer;
  width: -moz-fit-content;
  width: fit-content;
  padding: 1.2142857143rem 3rem;
  background-color: #C70101;
  border-radius: 0.3571428571rem;
  line-height: 100%;
  font-size: 1.1428571429rem;
  font-weight: 500;
  text-transform: uppercase;
}
.CTA--header {
  font-size: 0.8571428571rem;
  padding: 0.7142857143rem 1.4285714286rem;
}
.CTA--hero {
  margin-bottom: 0.7142857143rem;
}

.heading {
  text-align: center;
  text-transform: uppercase;
  color: #0D0D0D;
  font-weight: 700;
  font-size: 2.1428571429rem;
  line-height: 2.1428571429rem;
}
.heading--white {
  color: white;
  font-size: 2.5714285714rem;
  line-height: 3.8571428571rem;
  text-align: inherit;
}

@font-face {
  font-family: "Museomoderno";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local(""), url("../fonts/MuseoModerno-Bold.woff2") format("woff2"), url("../fonts/MuseoModerno-Bold.woff") format("woff");
}
@font-face {
  font-family: "Museomoderno";
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local(""), url("../fonts/MuseoModerno-Light.woff2") format("woff2"), url("../fonts/MuseoModerno-Light.woff") format("woff");
}
@font-face {
  font-family: "Museomoderno";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local(""), url("../fonts/MuseoModerno-Medium.woff2") format("woff2"), url("../fonts/MuseoModerno-Medium.woff") format("woff");
}
@font-face {
  font-family: "Museomoderno";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local(""), url("../fonts/MuseoModerno-Regular.woff2") format("woff2"), url("../fonts/MuseoModerno-Regular.woff") format("woff");
}
@font-face {
  font-family: "Museomoderno";
  font-style: normal;
  font-weight: 100;
  font-display: swap;
  src: local(""), url("../fonts/MuseoModerno-Thin.woff2") format("woff2"), url("../fonts/MuseoModerno-Thin.woff") format("woff");
}
@font-face {
  font-family: "Nunito";
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: local(""), url("../fonts/Nunito-Black.woff2") format("woff2"), url("../fonts/Nunito-Black.woff") format("woff");
}
@font-face {
  font-family: "Nunito";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local(""), url("../fonts/Nunito-Bold.woff2") format("woff2"), url("../fonts/Nunito-Bold.woff") format("woff");
}
@font-face {
  font-family: "Nunito";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local(""), url("../fonts/Nunito-ExtraBold.woff2") format("woff2"), url("../fonts/Nunito-ExtraBold.woff") format("woff");
}
@font-face {
  font-family: "Nunito";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local(""), url("../fonts/Nunito-Regular.woff2") format("woff2"), url("../fonts/Nunito-Regular.woff") format("woff");
}
.form {
  background: url("../img/opportunities.webp") center center/cover;
}
.form__container {
  min-height: 680px;
}
.form__content {
  min-height: inherit;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}
@media screen and (max-width: 768px) {
  .form__content {
    align-items: center;
    text-align: center;
  }
}
.form__title {
  color: white;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  text-align: left;
}
@media screen and (max-width: 768px) {
  .form__title {
    text-align: center;
    align-items: center;
  }
}
.form__heading {
  margin-bottom: 0.5714285714rem;
}
.form__subtitle {
  font-weight: 500;
  max-width: 50%;
  font-size: 1.4285714286rem;
  line-height: 2.1428571429rem;
  margin-bottom: 2.5714285714rem;
}
@media screen and (max-width: 768px) {
  .form__subtitle {
    max-width: none;
  }
}
.form__inputs {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
.form__input {
  border-radius: 0.3571428571rem;
  padding: 1.5714285714rem;
}
.form__input:last-of-type {
  margin-bottom: 5px;
}

.header {
  color: white;
  padding-top: 1.5rem;
}
.header__container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .header__container {
    justify-content: space-evenly;
  }
}
.header__contacts {
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 4px;
}
.header__number {
  font-weight: 700;
  font-size: 1.2857142857rem;
  line-height: 1.2857142857rem;
}

.officials {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: top;
}
@media screen and (max-width: 768px) {
  .officials {
    display: none;
  }
}
.officials__title {
  font-size: 0.8571428571rem;
  line-height: 0.8571428571rem;
  margin-bottom: 0.5rem;
}
.officials__item {
  margin-right: 0.3571428571rem;
  font-weight: 500;
  font-size: 1.2857142857rem;
  line-height: 2.0714285714rem;
}
.officials__item:after {
  content: ",";
}
.officials__item:last-child::after {
  content: "";
  margin-right: 0;
}

.hero {
  color: white;
  background: url("../img/hero.webp") center center/cover no-repeat;
}
.hero__container {
  height: 650px;
  display: flex;
  flex-direction: column;
}
.hero__content {
  padding-block: 6.5rem;
  flex: auto;
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  justify-content: space-around;
}
@media screen and (max-width: 768px) {
  .hero__content {
    align-items: center;
    text-align: center;
    padding-block: 10vmin;
  }
}
.hero__heading {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 3rem;
  line-height: 100%;
}
.hero__heading--thin {
  display: block;
  padding-top: 1.2142857143rem;
  font-weight: 500;
  font-size: 1.7142857143rem;
}
.hero__list {
  gap: 3.6428571429rem;
}
@media screen and (max-width: 480px) {
  .hero__list {
    gap: min(2vmin, 3.6428571429rem);
  }
}
.hero__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  max-width: 7.8571428571rem;
}
.hero__icon {
  fill: transparent;
  stroke: white;
  stroke-width: 3;
  width: 42px;
  height: 46px;
  margin-bottom: 1.4285714286rem;
}
.hero__icon--white {
  fill: white;
}
.hero-CTA {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}
.hero-CTA__link {
  text-decoration: underline;
}

.opportunities__container {
  min-height: 473px;
  height: 100%;
}
.opportunities__content {
  min-height: inherit;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  padding: 5.2142857143rem 0 4.6428571429rem 0;
}
@media screen and (max-width: 768px) {
  .opportunities__content {
    padding: 1.0714285714rem 3.2142857143rem;
  }
}
.opportunities__heading {
  margin-bottom: 4.2857142857rem;
}
@media screen and (max-width: 768px) {
  .opportunities__heading {
    margin-bottom: 1.4285714286rem;
  }
}
.opportunities__list {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
@media screen and (max-width: 768px) {
  .opportunities__list {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
  }
}
.opportunities__item {
  max-width: 280px;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: top;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .opportunities__item {
    max-width: none;
    flex-direction: row;
  }
}
.opportunities__icon {
  flex: 1;
  fill: transparent;
  stroke: #C70101;
  width: 70px;
  height: 70px;
  margin-bottom: 2.5rem;
}
@media screen and (max-width: 768px) {
  .opportunities__icon {
    margin-bottom: 0;
  }
}
.opportunities__desc {
  flex: 2;
}
.opportunities__subheading {
  font-weight: 700;
  font-size: 1.2857142857rem;
  line-height: 2.0714285714rem;
  margin-bottom: 1.4285714286rem;
}
.opportunities__text {
  font-weight: 300;
  font-size: 1rem;
  line-height: 1.2857142857rem;
}
.opportunities__link {
  color: #C70101;
  text-decoration: underline;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */